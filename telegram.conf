[bot]
server: localhost
chat_id: 1823169112
bot_token: 2041572960:AAH79Sft5wUsBUDZ5VXawBvyeQEjB7WBRrU
log_path: /home/pi/klipper_logs
power_device: power
eta_source: slicer
sensors: R_pi, Spider
heaters: extruder, heater_bed, chamber

[camera]
host: http://192.168.1.54:8080/?action=stream
#	This is the adress, where the desired webcam/webstream is located at. Enter this the same way you enter it in 
#	your printers web interface/your player. If you can stream it, the bot supports it, native h264 streams,
#	for example a vlc stream from a runcam webcam is absolutely possible. Do not feel contstrained by mjpeg streams.
flipVertically: false
flipHorizontally: false
#fourcc: x264
#	You can change the opencv VideoWriter fourcc codec. The default value is 'x264'.
# 	An alternative is mp4v for playback on specific apple devices, or if the machine which is going to do
#	the encoding is very weak.
#threads: 2 
#	You may limit the threads used for image processing. Default value is calculalated, (os.cpu_count() / 2)
videoDuration: 5
#	This is the length in seconds of the video, which is sent when requested with /video command. 
#	Default length of a video is 5 seconds
#light_control_timeout: 2
#	When the bot toggles lights to take a picture, or record a video, most cameras need a couple of seconds to adjust to 
#	the transition between full darkness and full brightness. This option tells the bot to wait n seconds, before
#	taking the picture, recording a video, doing timelapse photos. The default is not to use a delay.

[progress_notification]
percent: 10
#height: 5
#time: 600
min_delay_between_notifications: 60
#groups: group_id_1, group_id_2
#	When running multiple printers/a farm, you may want to aggregate all notifications from all printers in a group.
#	You can enter group IDs here, to which notifications will be sent. No control from a group is possible.
#	Only notifications are sent.

#[timelapse]
#cleanup: true
#height: 0.2
#time: 5
#target_fps: 30	

[telegram_ui]
hidden_methods: /video
#	This allows you to hide unused buttons from your bots keyboard.
silent_progress: true
#	Sends the progress message (%/mm if configured) without an alert. You still get a "red" notification, but it does not have sound or vibration.
#	Sadly the bot API does not permit sending "grey" completely silent messages. There is no way to work around that. 
#	Default is false.
#silent_commands: false
#	Sends all other messages (for example the emergency stop confirmation) without an alert.You still get a "red" notification, but it does not have sound or vibration.
#	Sadly the bot API does not permit sending "grey" completely silent messages. There is no way to work around that. 
#	Default is false.
#silent_status: false
#	Sendsthe status message (printer status) without an alert. You still get a "red" notification, but it does not have sound or vibration.
#	Sadly the bot API does not permit sending "grey" completely silent messages. There is no way to work around that. 
#	Default is false.
