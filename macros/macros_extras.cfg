[gcode_macro PREPARE_IS]
gcode:
    {% if printer.quad_gantry_level.applied|lower == 'false' %}
    QUAD_GANTRY_LEVEL
    DETACH_PROBE
    {% endif %}
    G90
    #G1 X175 Y20 Z100 F12000
    G1 X175 Y175 Z100 F12000

[gcode_macro TEST_SHAPER]
gcode:
    M104 S50
    M106 S255
    SET_PRESSURE_ADVANCE ADVANCE=0
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
    SHAPER_CALIBRATE
    M400
    M109 S0
    M107
    #G1 X175 Y20 Z100 F12000
    G1 X175 Y175 Z100 F12000

[gcode_macro HOTEND_PID]
gcode:
    {% set t = params.T|default(250)|int %}
	
    PID_CALIBRATE HEATER=extruder TARGET={t}
    SAVE_CONFIG

[gcode_macro BED_PID]
gcode:
    {% set t = params.T|default(110)|int %}

    PID_CALIBRATE HEATER=heater_bed TARGET={t}
    SAVE_CONFIG

[delayed_gcode error]
initial_duration: 0.
gcode:
    {%if printer.idle_timeout.state == "Error" %}
        LED_RED
    {% endif %}
    UPDATE_DELAYED_GCODE ID=error DURATION=4 


#####################################################################
#       FILAMENT
#####################################################################

#[gcode_macro FILAMENT_DETECT]
#description: Detect filament types handler PERAMS: FILAMENT
#gcode:
#    {% set filament = params.FILAMENT|default(PLA)|string %}
#    {action_respond_info("Filament Type: %s detected." % (filament))}
#    {% if 'ABS' in filament or 'ABS+' in filament
#    or 'ASA' in filament or 'PC' in filament or 'PCCF' in filament %}
#        SET_EXTRUDER_CONT TEMP=180
#        SET_PADVANCE V=0.050
#        FILAMENT_BOX T=85
#        UPDATE_DELAYED_GCODE ID=FILAMENT_BOX_CONTROL_LOOP DURATION=1
#        EXAUST_FAN FSPEED=0
#    {% elif 'PLA' in filament or 'PETG' in filament or 'HTPLA' in filament
#    or 'TPU' in filament %}
#        #SET_PRESSURE_ADVANCE ADVANCE=0.055
#        SET_EXTRUDER_CONT TEMP=160
#        FILAMENT_BOX T=75
#        UPDATE_DELAYED_GCODE ID=FILAMENT_BOX_CONTROL_LOOP DURATION=1
#        EXAUST_FAN
#    {% else %}
#        {action_respond_info("No filament type given. Setting dryer to LOW temp.")}
#        #SET_PRESSURE_ADVANCE ADVANCE=0.055
#        SET_EXTRUDER_CONT TEMP=140
#        FILAMENT_BOX T=75
#        UPDATE_DELAYED_GCODE ID=FILAMENT_BOX_CONTROL_LOOP DURATION=1
#        EXAUST_FAN
#    {% endif %}

#####################################################################
#   SET TEMPERATURES
#####################################################################

#[gcode_macro SET_BED_CONT]
#description: Set bed temperature and continue PERAMS: TEMP
#gcode:
#    {% set bed = params.TEMP|int %}
#    { action_respond_info("Setting BED temp to %.0f C and CONTINUING..." % (bedtemp)) }
#    M140 S{bed} 

#[gcode_macro SET_BED_WAIT]
#description: Set bed temperature and wait till its reached. PERAMS: TEMP
#gcode:
#    {% set bed = params.TEMP|int %}
#    {action_respond_info("Setting BED temp to %.0f C and WAITING..." % (bedtemp))}
#    M190 S{bed}          

#[gcode_macro SET_CHAMBER_MINIMUM]
#description: Detect filament types and run. PERAMS: TEMP
#gcode:
#    {% set chamber = params.TEMP|int %}   
#    {action_respond_info("Waiting for CHAMBEER temp reach %.0f C..." % (chamber))}
#    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}

#[gcode_macro SET_HOTEND_WAIT]
#description: Set extruder temperature and wait till its reached. PERAMS: TEMP
#gcode:
#    {% set hotend = params.TEMP|int %}
#    {action_respond_info("Setting HOTEND temp to %.0f C and WAITING..." % (hotend))}
#    M109 S{hotend}

#[gcode_macro SET_HOTEND_CONT]
#description: Set extruder temperature and continue PERAMS: TEMP
#gcode:
#    {% set hotend = params.TEMP|int %}
#    {action_respond_info("Setting HOTEND temp to %.0f C and CONTINUING..." % (hotend))}
#    M104 S{hotend}